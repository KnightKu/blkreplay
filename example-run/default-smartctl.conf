#!/bin/bash
# Copyright 2010-2013 Thomas Schoebel-Theuer /  1&1 Internet AG
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.

#####################################################################

## defaults for module smartctl
##
## smartctl: erase / trim SSDs before your test starts
##
## This may not work with all SSDs.
##
## WARNING!
## Consider this as ALPHA software, it may destroy your hardware!

## enable_smartctl
##
## Set to 0 or 1. Enable / disable this module.

enable_smartctl=0

## enable_ssd_erase
##
## Set to 0 or 1. Use so-called "security-erase" for initialization
## of the whole SSD.
##
## Some SSDs need to be physically disconnected from their SATA bus
## and re-connected before this can work, because the BIOS locks them
## even before Linux can take over control.
##
## Therefore, SSD testing must frequently be carried out on workstations
## with physical access to the hardware.
##
## Fully automating this seems to be hard.
##
## Anyone knowing a better method should contact me and/or send
## me patches / pull requests.

enable_ssd_erase=1

## enable_ssd_trim
##
## Set to 0 or 1. Use hdparm to trim all sector ranges of the SSD
## in a loop.
##
## Many SSDs dislike this method, get confused, must be reset /
## powered off after that, or may even get finally destroyed.
##
## USE AT YOUR OWN RISK!!!!

enable_ssd_trim=0

## settle_wait
##
## When set to values != 0, wait these number of seconds after
## erasing / trimming the SSD.
##
## Some devices need this.
##
## Some other devices don't need this, but their performance results may
## be different, depending on the settle time.
## It appears that security erase just triggers some internal operations
## which seem to continue in background, even when user IO starts.
##
## I did not fully investigate this. You may need to wait 1800 seconds
## or even more in order to see a difference. In any case, it is
## highly dependent on the manufacturer / model.

settle_wait=0
